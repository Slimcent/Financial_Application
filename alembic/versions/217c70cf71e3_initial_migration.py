"""Initial migration

Revision ID: 217c70cf71e3
Revises: 
Create Date: 2025-04-01 13:41:52.553771

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '217c70cf71e3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('AccountTypes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('Roles',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('Id'),
    sa.UniqueConstraint('Name')
    )
    op.create_table('TransactionModes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('TransactionStatuses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('TransactionTypes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('Customers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('account_type_id', sa.Integer(), nullable=True),
    sa.Column('balance', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('Staff',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('UserId', sa.Integer(), nullable=False),
    sa.Column('Position', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['UserId'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('Transactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('account_type_id', sa.Integer(), nullable=True),
    sa.Column('account_number', sa.String(length=10), nullable=True),
    sa.Column('transaction_type_id', sa.Integer(), nullable=False),
    sa.Column('transaction_mode_id', sa.Integer(), nullable=False),
    sa.Column('transaction_status_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('transaction_date', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['Customers.id'], ),
    sa.ForeignKeyConstraint(['transaction_mode_id'], ['TransactionModes.id'], ),
    sa.ForeignKeyConstraint(['transaction_status_id'], ['TransactionStatuses.id'], ),
    sa.ForeignKeyConstraint(['transaction_type_id'], ['TransactionTypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Transactions')
    op.drop_table('Staff')
    op.drop_table('Customers')
    op.drop_table('Users')
    op.drop_table('TransactionTypes')
    op.drop_table('TransactionStatuses')
    op.drop_table('TransactionModes')
    op.drop_table('Roles')
    op.drop_table('AccountTypes')
    # ### end Alembic commands ###
